"""update entities

Revision ID: 38a15fb662ef
Revises: faa9520afb3c
Create Date: 2025-04-24 19:18:59.302504

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '38a15fb662ef'
down_revision: Union[str, None] = 'faa9520afb3c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('events',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('isFavorite', sa.Boolean(), nullable=True),
    sa.Column('organizer', sa.String(), nullable=True),
    sa.Column('organizer_address', sa.String(), nullable=True),
    sa.Column('organizer_address_eng', sa.String(), nullable=True),
    sa.Column('organizer_supervisor_fio', sa.String(), nullable=True),
    sa.Column('organizer_supervisor_fio_eng', sa.String(), nullable=True),
    sa.Column('organizer_site', sa.String(), nullable=True),
    sa.Column('organizer_vk', sa.String(), nullable=True),
    sa.Column('organizer_telegram', sa.String(), nullable=True),
    sa.Column('organizer_email', sa.String(), nullable=True),
    sa.Column('free_places', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('event_type', sa.String(), nullable=True),
    sa.Column('event_format', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('location_eng', sa.String(), nullable=True),
    sa.Column('registration_status', sa.String(), nullable=True),
    sa.Column('registration_period', sa.String(), nullable=True),
    sa.Column('registration_comment', sa.String(), nullable=True),
    sa.Column('place_number', sa.String(), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('title_eng', sa.String(), nullable=True),
    sa.Column('cypher', sa.String(), nullable=True),
    sa.Column('published_at', sa.String(), nullable=True),
    sa.Column('cover_url', sa.String(), nullable=True),
    sa.Column('parent', sa.Boolean(), nullable=True),
    sa.Column('typeof', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('users',
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('telegram_id')
    )
    op.create_table('vacancy',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('employment_type', sa.String(), nullable=False),
    sa.Column('experience', sa.String(), nullable=False),
    sa.Column('education_level', sa.String(), nullable=False),
    sa.Column('salary_from', sa.Integer(), nullable=True),
    sa.Column('salary_up_to', sa.Integer(), nullable=True),
    sa.Column('before_tax', sa.Boolean(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('contact_name', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('is_blocked', sa.Boolean(), nullable=False),
    sa.Column('published_at', sa.String(), nullable=False),
    sa.Column('is_favorite', sa.Boolean(), nullable=False),
    sa.Column('hh_url', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('coordinates',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('longitude', sa.String(), nullable=False),
    sa.Column('latitude', sa.String(), nullable=False),
    sa.Column('event_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('desirable_vacancy_competency',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('vacancy_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancy.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('main_vacancy_competency',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('vacancy_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancy.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('member_statuses',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('member_status_name_eng', sa.String(), nullable=False),
    sa.Column('member_status_name', sa.String(), nullable=False),
    sa.Column('event_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('organization',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('vacancy_id', sa.BigInteger(), nullable=False),
    sa.Column('full_title', sa.String(), nullable=True),
    sa.Column('full_title_eng', sa.String(), nullable=True),
    sa.Column('short_title', sa.String(), nullable=True),
    sa.Column('short_title_eng', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('description_eng', sa.String(), nullable=True),
    sa.Column('supervisor_fio', sa.String(), nullable=True),
    sa.Column('supervisor_fio_eng', sa.String(), nullable=True),
    sa.Column('supervisor_job_title', sa.String(), nullable=True),
    sa.Column('supervisor_job_title_eng', sa.String(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('is_participant', sa.Boolean(), nullable=True),
    sa.Column('is_published', sa.Boolean(), nullable=True),
    sa.Column('inn', sa.String(), nullable=True),
    sa.Column('ogrn', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('address_eng', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('vk', sa.String(), nullable=True),
    sa.Column('telegram', sa.String(), nullable=True),
    sa.Column('site', sa.String(), nullable=True),
    sa.Column('logo', sa.String(), nullable=True),
    sa.Column('cover', sa.String(), nullable=True),
    sa.Column('published_at', sa.String(), nullable=True),
    sa.Column('licenze', sa.String(), nullable=True),
    sa.Column('accreditation_certificate', sa.String(), nullable=True),
    sa.Column('educational_type', sa.String(), nullable=True),
    sa.Column('is_educational', sa.Boolean(), nullable=True),
    sa.Column('is_head', sa.Boolean(), nullable=True),
    sa.Column('stie', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancy.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('organizer_phones',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('event_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('periods',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('lower', sa.String(), nullable=False),
    sa.Column('upper', sa.String(), nullable=False),
    sa.Column('event_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('personal_qualities',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('vacancy_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancy.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('professions',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('vacancy_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancy.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('schedule',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('vacancy_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancy.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('schedule')
    op.drop_table('professions')
    op.drop_table('personal_qualities')
    op.drop_table('periods')
    op.drop_table('organizer_phones')
    op.drop_table('organization')
    op.drop_table('member_statuses')
    op.drop_table('main_vacancy_competency')
    op.drop_table('desirable_vacancy_competency')
    op.drop_table('coordinates')
    op.drop_table('vacancy')
    op.drop_table('users')
    op.drop_table('events')
    # ### end Alembic commands ###
