"""update organization

Revision ID: 6fa9f13d06fa
Revises: 38a15fb662ef
Create Date: 2025-04-24 23:23:28.160817

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6fa9f13d06fa'
down_revision: Union[str, None] = '38a15fb662ef'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'desirable_vacancy_competency', ['id'])
    op.create_unique_constraint(None, 'events', ['id'])
    op.create_unique_constraint(None, 'main_vacancy_competency', ['id'])
    op.create_unique_constraint(None, 'member_statuses', ['id'])
    op.add_column('organization', sa.Column('address_organization', sa.String(), nullable=True))
    op.create_unique_constraint(None, 'organization', ['id'])
    op.create_unique_constraint(None, 'organizer_phones', ['id'])
    op.create_unique_constraint(None, 'periods', ['id'])
    op.create_unique_constraint(None, 'personal_qualities', ['id'])
    op.create_unique_constraint(None, 'professions', ['id'])
    op.create_unique_constraint(None, 'schedule', ['id'])
    op.create_unique_constraint(None, 'vacancy', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'vacancy', type_='unique')
    op.drop_constraint(None, 'schedule', type_='unique')
    op.drop_constraint(None, 'professions', type_='unique')
    op.drop_constraint(None, 'personal_qualities', type_='unique')
    op.drop_constraint(None, 'periods', type_='unique')
    op.drop_constraint(None, 'organizer_phones', type_='unique')
    op.drop_constraint(None, 'organization', type_='unique')
    op.drop_column('organization', 'address_organization')
    op.drop_constraint(None, 'member_statuses', type_='unique')
    op.drop_constraint(None, 'main_vacancy_competency', type_='unique')
    op.drop_constraint(None, 'events', type_='unique')
    op.drop_constraint(None, 'desirable_vacancy_competency', type_='unique')
    # ### end Alembic commands ###
