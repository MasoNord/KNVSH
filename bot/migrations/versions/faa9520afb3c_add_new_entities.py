"""add new entities

Revision ID: faa9520afb3c
Revises: 482f5f9e2b19
Create Date: 2025-04-23 23:52:02.572214

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'faa9520afb3c'
down_revision: Union[str, None] = '482f5f9e2b19'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('events',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('isFavorite', sa.Boolean(), nullable=True),
    sa.Column('organizer', sa.String(), nullable=True),
    sa.Column('organizer_address', sa.String(), nullable=True),
    sa.Column('organizer_address_eng', sa.String(), nullable=True),
    sa.Column('organizer_supervisor_fio', sa.String(), nullable=True),
    sa.Column('organizer_supervisor_fio_eng', sa.String(), nullable=True),
    sa.Column('organizer_site', sa.String(), nullable=True),
    sa.Column('organizer_vk', sa.String(), nullable=True),
    sa.Column('organizer_telegram', sa.String(), nullable=True),
    sa.Column('organizer_email', sa.String(), nullable=True),
    sa.Column('free_places', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('event_type', sa.String(), nullable=True),
    sa.Column('event_format', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('location_eng', sa.String(), nullable=True),
    sa.Column('registration_status', sa.String(), nullable=True),
    sa.Column('registration_period', sa.String(), nullable=True),
    sa.Column('registration_comment', sa.String(), nullable=True),
    sa.Column('place_number', sa.String(), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('title_eng', sa.String(), nullable=True),
    sa.Column('cypher', sa.String(), nullable=True),
    sa.Column('published_at', sa.String(), nullable=True),
    sa.Column('cover_url', sa.String(), nullable=True),
    sa.Column('parent', sa.Boolean(), nullable=True),
    sa.Column('typeof', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('users',
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('telegram_id')
    )
    op.create_table('vacancy',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('employment_type', sa.String(), nullable=False),
    sa.Column('experience', sa.String(), nullable=False),
    sa.Column('educationLevel', sa.String(), nullable=False),
    sa.Column('salary_from', sa.Integer(), nullable=True),
    sa.Column('salary_up_to', sa.Integer(), nullable=True),
    sa.Column('before_tax', sa.Boolean(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('contact_name', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('is_blocked', sa.Boolean(), nullable=False),
    sa.Column('published_at', sa.String(), nullable=False),
    sa.Column('is_favorite', sa.Boolean(), nullable=False),
    sa.Column('hh_url', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('coordinates',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('longitude', sa.String(), nullable=False),
    sa.Column('latitude', sa.String(), nullable=False),
    sa.Column('event_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('desirable_vacancy_competency',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('vacancy_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancy.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('main_vacancy_competency',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('vacancy_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancy.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('member_statuses',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('member_status_name_eng', sa.String(), nullable=False),
    sa.Column('member_status_name', sa.String(), nullable=False),
    sa.Column('event_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('organizer_phones',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('event_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('periods',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('lower', sa.String(), nullable=False),
    sa.Column('upper', sa.String(), nullable=False),
    sa.Column('event_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('personal_qualities',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('vacancy_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancy.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('professions',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('vacancy_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancy.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.drop_table('educational_type')
    op.drop_table('address')
    op.drop_table('experience')
    op.drop_table('vacancy_schedule')
    op.drop_table('vacancy_desirable_competency')
    op.drop_table('attachment')
    op.drop_table('competency')
    op.drop_table('employment_type')
    op.drop_table('vacancy_main_competency')
    op.drop_table('education_level')
    op.add_column('organization', sa.Column('vacancy_id', sa.BigInteger(), nullable=False))
    op.add_column('organization', sa.Column('logo', sa.String(), nullable=True))
    op.add_column('organization', sa.Column('cover', sa.String(), nullable=True))
    op.add_column('organization', sa.Column('published_at', sa.String(), nullable=True))
    op.add_column('organization', sa.Column('licenze', sa.String(), nullable=True))
    op.add_column('organization', sa.Column('accreditation_certificate', sa.String(), nullable=True))
    op.add_column('organization', sa.Column('educational_type', sa.String(), nullable=True))
    op.add_column('organization', sa.Column('stie', sa.String(), nullable=True))
    op.add_column('organization', sa.Column('name', sa.String(), nullable=True))
    op.create_unique_constraint(None, 'organization', ['id'])
    op.drop_constraint('organization_educational_type_id_fkey', 'organization', type_='foreignkey')
    op.drop_constraint('organization_parent_id_fkey', 'organization', type_='foreignkey')
    op.create_foreign_key(None, 'organization', 'vacancy', ['vacancy_id'], ['id'])
    op.drop_column('organization', 'educational_type_id')
    op.drop_column('organization', 'parent_id')
    op.add_column('schedule', sa.Column('vacancy_id', sa.BigInteger(), nullable=False))
    op.create_unique_constraint(None, 'schedule', ['id'])
    op.create_foreign_key(None, 'schedule', 'vacancy', ['vacancy_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'schedule', type_='foreignkey')
    op.drop_constraint(None, 'schedule', type_='unique')
    op.drop_column('schedule', 'vacancy_id')
    op.add_column('organization', sa.Column('parent_id', sa.BIGINT(), autoincrement=False, nullable=True))
    op.add_column('organization', sa.Column('educational_type_id', sa.BIGINT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'organization', type_='foreignkey')
    op.create_foreign_key('organization_parent_id_fkey', 'organization', 'organization', ['parent_id'], ['id'])
    op.create_foreign_key('organization_educational_type_id_fkey', 'organization', 'educational_type', ['educational_type_id'], ['id'])
    op.drop_constraint(None, 'organization', type_='unique')
    op.drop_column('organization', 'name')
    op.drop_column('organization', 'stie')
    op.drop_column('organization', 'educational_type')
    op.drop_column('organization', 'accreditation_certificate')
    op.drop_column('organization', 'licenze')
    op.drop_column('organization', 'published_at')
    op.drop_column('organization', 'cover')
    op.drop_column('organization', 'logo')
    op.drop_column('organization', 'vacancy_id')
    op.create_table('education_level',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='education_level_pkey')
    )
    op.create_table('vacancy_main_competency',
    sa.Column('vacancy_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('competency_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['competency_id'], ['competency.id'], name='vacancy_main_competency_competency_id_fkey'),
    sa.PrimaryKeyConstraint('vacancy_id', 'competency_id', name='vacancy_main_competency_pkey')
    )
    op.create_table('employment_type',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='employment_type_pkey')
    )
    op.create_table('competency',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('competency_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='competency_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('attachment',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('organization_logo_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('organization_licenze_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('organization_accreditation_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['organization_accreditation_id'], ['organization.id'], name='attachment_organization_accreditation_id_fkey'),
    sa.ForeignKeyConstraint(['organization_licenze_id'], ['organization.id'], name='attachment_organization_licenze_id_fkey'),
    sa.ForeignKeyConstraint(['organization_logo_id'], ['organization.id'], name='attachment_organization_logo_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='attachment_pkey')
    )
    op.create_table('vacancy_desirable_competency',
    sa.Column('vacancy_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('competency_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['competency_id'], ['competency.id'], name='vacancy_desirable_competency_competency_id_fkey'),
    sa.PrimaryKeyConstraint('vacancy_id', 'competency_id', name='vacancy_desirable_competency_pkey')
    )
    op.create_table('vacancy_schedule',
    sa.Column('vacancy_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('schedule_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['schedule_id'], ['schedule.id'], name='vacancy_schedule_schedule_id_fkey'),
    sa.PrimaryKeyConstraint('vacancy_id', 'schedule_id', name='vacancy_schedule_pkey')
    )
    op.create_table('experience',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='experience_pkey')
    )
    op.create_table('address',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='address_pkey')
    )
    op.create_table('educational_type',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='educational_type_pkey')
    )
    op.drop_table('professions')
    op.drop_table('personal_qualities')
    op.drop_table('periods')
    op.drop_table('organizer_phones')
    op.drop_table('member_statuses')
    op.drop_table('main_vacancy_competency')
    op.drop_table('desirable_vacancy_competency')
    op.drop_table('coordinates')
    op.drop_table('vacancy')
    op.drop_table('users')
    op.drop_table('events')
    # ### end Alembic commands ###
