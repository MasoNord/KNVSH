from typing import List
from aiogram.types import InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

def admin_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data = "statistic")
    kb.button(text="üéüÔ∏è –î–æ–±–∞–≤–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", callback_data = "add_events")
    kb.button(text="üíº –î–æ–±–∞–≤–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏", callback_data = "add_vacancies")
    kb.button(text="üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data="home")
    kb.adjust(1)
    return kb.as_markup()


def main_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", callback_data="admin_panel")
    kb.button(text="üìÜ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–Ω–∏—è", callback_data="get_events")
    kb.button(text="üì¢ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏", callback_data="get_vacancies")
    kb.adjust(1)
    return kb.as_markup()

def add_events_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="üìë –î–æ–±–∞–≤–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è —á–µ—Ä–µ–∑ JSON —Ñ–∞–π–ª", callback_data = "add_events_by_file")
    kb.button(text="üåê –î–æ–±–∞–≤–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞ JSON —Ñ–∞–π–ª", callback_data = "add_events_by_url")
    kb.button(text="üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data="home")
    kb.adjust(1)
    return kb.as_markup()

def add_vacancy_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="üìë –î–æ–±–∞–≤–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é —á–µ—Ä–µ–∑ JSON —Ñ–∞–π–ª", callback_data = "add_vacancies_by_file")
    kb.button(text="üåê –î–æ–±–∞–≤–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞ JSON —Ñ–∞–π–ª", callback_data = "add_vacancies_by_url")
    kb.button(text="üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data="home")
    kb.adjust(1)
    return kb.as_markup()

def cancel_kb_inline() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="–û—Ç–º–µ–Ω–∞", callback_data="cancel")
    return kb.as_markup()

def continue_add_new_events() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="–î–æ–±–∞–≤–∏—Ç—å –µ—â–µ", callback_data="add_events")
    kb.button(text="‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", callback_data="admin_panel")
    kb.adjust(2)
    return kb.as_markup()